// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "HOMEPageTranslations",
    checkConstraints: {
      HomePageTranslatedText_xata_id_length_xata_id: {
        name: "HomePageTranslatedText_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      HOMEPageTranslations_panelSlug_unique: {
        name: "HOMEPageTranslations_panelSlug_unique",
        columns: ["panelSlug"],
      },
      _pgroll_new_HomePageTranslatedText_xata_id_key: {
        name: "_pgroll_new_HomePageTranslatedText_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "esTranslation",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelSlug",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "ptTranslation",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "contact_msgs",
    checkConstraints: {
      contact_msgs_xata_id_length_xata_id: {
        name: "contact_msgs_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_contact_msgs_xata_id_key: {
        name: "_pgroll_new_contact_msgs_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "email",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "message",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: "'unread'::text",
        comment: "",
      },
      {
        name: "username",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "pages",
    checkConstraints: {
      pages_xata_id_length_xata_id: {
        name: "pages_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_pages_xata_id_key: {
        name: "_pgroll_new_pages_xata_id_key",
        columns: ["xata_id"],
      },
      pages__pgroll_new_pageSlug_key: {
        name: "pages__pgroll_new_pageSlug_key",
        columns: ["pageSlug"],
      },
    },
    columns: [
      {
        name: "PageDescription",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "pageContent",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "pageSlug",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "pageTitle",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "panel-services",
    checkConstraints: {
      "panel-services_xata_id_length_xata_id": {
        name: "panel-services_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      "_pgroll_new_panel-services_xata_id_key": {
        name: "_pgroll_new_panel-services_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "panelName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelRefUrl",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelSlug",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceCategory",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMax",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMin",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceNo",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceRate",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceUploadDate",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "panel-services1",
    checkConstraints: {
      "panel-services1_xata_id_length_xata_id": {
        name: "panel-services1_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      "_pgroll_new_panel-services1_xata_id_key": {
        name: "_pgroll_new_panel-services1_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "panelName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelRefUrl",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelSlug",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceCategory",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMax",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMin",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceNo",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceRate",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceUploadDate",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "panel-services2",
    checkConstraints: {
      "panel-services2_xata_id_length_xata_id": {
        name: "panel-services2_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      "_pgroll_new_panel-services2_xata_id_key": {
        name: "_pgroll_new_panel-services2_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "panelName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelRefUrl",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelSlug",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceCategory",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMax",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMin",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceNo",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceRate",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceUploadDate",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "panel-services3",
    checkConstraints: {
      "panel-services3_xata_id_length_xata_id": {
        name: "panel-services3_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      "_pgroll_new_panel-services3_xata_id_key": {
        name: "_pgroll_new_panel-services3_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "panelName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelRefUrl",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelSlug",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceCategory",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMax",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMin",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceNo",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceRate",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceUploadDate",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "panel-services4",
    checkConstraints: {
      "panel-services4_xata_id_length_xata_id": {
        name: "panel-services4_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      "_pgroll_new_panel-services4_xata_id_key": {
        name: "_pgroll_new_panel-services4_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "panelName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelRefUrl",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelSlug",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceCategory",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMax",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMin",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceNo",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceRate",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceUploadDate",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "panel-services5",
    checkConstraints: {
      "panel-services5_xata_id_length_xata_id": {
        name: "panel-services5_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      "_pgroll_new_panel-services5_xata_id_key": {
        name: "_pgroll_new_panel-services5_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "panelName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelRefUrl",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelSlug",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceCategory",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMax",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceMin",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceNo",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceRate",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceUploadDate",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "panels-datatable",
    checkConstraints: {
      "panels-datatable_xata_id_length_xata_id": {
        name: "panels-datatable_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      "_pgroll_new_panels-datatable_xata_id_key": {
        name: "_pgroll_new_panels-datatable_xata_id_key",
        columns: ["xata_id"],
      },
      "panels-datatable__pgroll_new_panelSlug_key": {
        name: "panels-datatable__pgroll_new_panelSlug_key",
        columns: ["panelSlug"],
      },
    },
    columns: [
      {
        name: "lastBackupDate",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "paneFeaturedImage",
        type: "file",
        file: { defaultPublicAccess: false },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.file.dpa":true}',
      },
      {
        name: "panelAPIKey",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelAPILink",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelMetaDesc",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelSlug",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelTextDescrition",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelTitle",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "panelWebsiteURL",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "paymentOptions",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "rating",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "ratingOtherSites",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "payment-options",
    checkConstraints: {
      "payment-options_xata_id_length_xata_id": {
        name: "payment-options_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      "_pgroll_new_payment-options_xata_id_key": {
        name: "_pgroll_new_payment-options_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "paymentLogo",
        type: "file",
        file: { defaultPublicAccess: false },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "paymentOptTitle",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "services",
    checkConstraints: {
      services_xata_id_length_xata_id: {
        name: "services_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_services_xata_id_key: {
        name: "_pgroll_new_services_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "serviceColor",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceCount",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "serviceLogo",
        type: "file",
        file: { defaultPublicAccess: false },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.file.dpa":true}',
      },
      {
        name: "serviceTitle",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "sidebarWidgets",
    checkConstraints: {
      sidebarWidgets_xata_id_length_xata_id: {
        name: "sidebarWidgets_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_sidebarWidgets_xata_id_key: {
        name: "_pgroll_new_sidebarWidgets_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "widgetCodeBlock",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "widgetTitle",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "siteSettings",
    checkConstraints: {
      siteSettings_xata_id_length_xata_id: {
        name: "siteSettings_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_siteSettings_xata_id_key: {
        name: "_pgroll_new_siteSettings_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "SiteTitle",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "adminPath",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "emailAutoReplyContent",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "homeBackgroundImage",
        type: "file",
        file: { defaultPublicAccess: false },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.file.dpa":true}',
      },
      {
        name: "homeHeaderPara",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "homeHeaderParaEs",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "homeHeaderParaPt",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "homeHeaderText",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "homePanelCount",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "platformServiceCount",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "siteDeployHook",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "siteFavicon",
        type: "file",
        file: { defaultPublicAccess: false },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.file.dpa":true}',
      },
      {
        name: "siteLog",
        type: "file",
        file: { defaultPublicAccess: false },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.file.dpa":true}',
      },
      {
        name: "siteMetaDescription",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "users",
    checkConstraints: {
      users_xata_id_length_xata_id: {
        name: "users_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_users_xata_id_key: {
        name: "_pgroll_new_users_xata_id_key",
        columns: ["xata_id"],
      },
      users__pgroll_new_email_key: {
        name: "users__pgroll_new_email_key",
        columns: ["email"],
      },
      users__pgroll_new_username_key: {
        name: "users__pgroll_new_username_key",
        columns: ["username"],
      },
    },
    columns: [
      {
        name: "ProfilePic",
        type: "file",
        file: { defaultPublicAccess: false },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.file.dpa":true}',
      },
      {
        name: "email",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "fullName",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "password",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: "'new_pass'::text",
        comment: "",
      },
      {
        name: "role",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "username",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type HOMEPageTranslations = InferredTypes["HOMEPageTranslations"];
export type HOMEPageTranslationsRecord = HOMEPageTranslations & XataRecord;

export type ContactMsgs = InferredTypes["contact_msgs"];
export type ContactMsgsRecord = ContactMsgs & XataRecord;

export type Pages = InferredTypes["pages"];
export type PagesRecord = Pages & XataRecord;

export type PanelServices = InferredTypes["panel-services"];
export type PanelServicesRecord = PanelServices & XataRecord;

export type PanelServices1 = InferredTypes["panel-services1"];
export type PanelServices1Record = PanelServices1 & XataRecord;

export type PanelServices2 = InferredTypes["panel-services2"];
export type PanelServices2Record = PanelServices2 & XataRecord;

export type PanelServices3 = InferredTypes["panel-services3"];
export type PanelServices3Record = PanelServices3 & XataRecord;

export type PanelServices4 = InferredTypes["panel-services4"];
export type PanelServices4Record = PanelServices4 & XataRecord;

export type PanelServices5 = InferredTypes["panel-services5"];
export type PanelServices5Record = PanelServices5 & XataRecord;

export type PanelsDatatable = InferredTypes["panels-datatable"];
export type PanelsDatatableRecord = PanelsDatatable & XataRecord;

export type PaymentOptions = InferredTypes["payment-options"];
export type PaymentOptionsRecord = PaymentOptions & XataRecord;

export type Services = InferredTypes["services"];
export type ServicesRecord = Services & XataRecord;

export type SidebarWidgets = InferredTypes["sidebarWidgets"];
export type SidebarWidgetsRecord = SidebarWidgets & XataRecord;

export type SiteSettings = InferredTypes["siteSettings"];
export type SiteSettingsRecord = SiteSettings & XataRecord;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type DatabaseSchema = {
  HOMEPageTranslations: HOMEPageTranslationsRecord;
  contact_msgs: ContactMsgsRecord;
  pages: PagesRecord;
  "panel-services": PanelServicesRecord;
  "panel-services1": PanelServices1Record;
  "panel-services2": PanelServices2Record;
  "panel-services3": PanelServices3Record;
  "panel-services4": PanelServices4Record;
  "panel-services5": PanelServices5Record;
  "panels-datatable": PanelsDatatableRecord;
  "payment-options": PaymentOptionsRecord;
  services: ServicesRecord;
  sidebarWidgets: SidebarWidgetsRecord;
  siteSettings: SiteSettingsRecord;
  users: UsersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://SMMPanel2-s-workspace-133e0g.eu-central-1.xata.sh/db/smmpanel2",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
